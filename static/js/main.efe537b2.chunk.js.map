{"version":3,"sources":["components/columns.ts","components/TableStyles.ts","components/StickyTable.tsx","components/Checkbox.tsx","components/ColumnHiding.tsx","components/ColumnOrder.tsx","components/GlobalFilter.tsx","components/ColumnFilter.tsx","components/FilteringTable.tsx","components/PaginationTable.tsx","components/RowSelection.tsx","components/BasicTable.tsx","components/SortingTable.tsx","components/NavItem.tsx","components/Sidebar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COLUMNS","Header","Footer","accessor","disableFilters","sticky","Cell","value","format","Date","GROUPED_COLUMNS","columns","Styles","styled","div","StickyTable","useMemo","data","MOCK_DATA","useTable","useBlockLayout","useSticky","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","firstPageRows","slice","StickyTableWrapper","className","style","height","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","footerGroup","Checkbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolveRef","useEffect","current","type","HidingOption","ColumnHiding","allColumns","getToggleHideAllColumnsProps","getToggleHiddenProps","id","getFooterGroupProps","getFooterProps","ColumnOrder","useColumnOrder","setColumnOrder","onClick","idx","GlobalFilter","filter","setFilter","useState","setValue","onChange","useAsyncDebounce","undefined","margin","e","target","placeholder","ColumnFilter","filterValue","FilteringTable","defaultColumn","Filter","useFilters","useGlobalFilter","state","setGlobalFilter","globalFilter","canFilter","PaginationOptions","PaginationTable","initialState","pageIndex","usePagination","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","pageSize","length","defaultValue","pageNumber","Number","width","disabled","RowSelection","useRowSelect","hooks","visibleColumns","push","getToggleAllPageRowsSelectedProps","getToggleRowSelectedProps","selectedFlatRows","JSON","stringify","original","BasicTable","tableInstance","SortingTable","useSortBy","getSortByToggleProps","isSorted","isSortedDesc","NavItemWrapper","NavItem","href","icon","title","location","useLocation","active","matchPath","pathname","to","items","Sidebar","RepoLink","a","DashboardSidebar","item","viewBox","focusable","data-icon","fill","aria-hidden","d","LayoutRoot","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.efe537b2.chunk.js","sourcesContent":["import { format } from 'date-fns';\r\n\r\nexport const COLUMNS = [\r\n  {\r\n    Header: 'ID',\r\n    Footer: 'ID',\r\n    accessor: 'id',\r\n    disableFilters: true,\r\n    sticky: 'left',\r\n  },\r\n  {\r\n    Header: 'First Name',\r\n    Footer: 'First Name',\r\n    accessor: 'first_name',\r\n    sticky: 'left',\r\n  },\r\n  {\r\n    Header: 'Last Name',\r\n    Footer: 'Last Name',\r\n    accessor: 'last_name',\r\n    sticky: 'left',\r\n  },\r\n  {\r\n    Header: 'Date of Birth',\r\n    Footer: 'Date of Birth',\r\n    accessor: 'date_of_birth',\r\n    Cell: ({ value }: { value: string }) => {\r\n      return format(new Date(value), 'yyyy/MM/dd');\r\n    },\r\n  },\r\n  {\r\n    Header: 'Country',\r\n    Footer: 'Country',\r\n    accessor: 'country',\r\n  },\r\n  {\r\n    Header: 'Phone',\r\n    Footer: 'Phone',\r\n    accessor: 'phone',\r\n  },\r\n  {\r\n    Header: 'E-mail',\r\n    Footer: 'E-mail',\r\n    accessor: 'email',\r\n  },\r\n  {\r\n    Header: 'Age',\r\n    Footer: 'Age',\r\n    accessor: 'age',\r\n  },\r\n];\r\n\r\nexport const GROUPED_COLUMNS = [\r\n  {\r\n    Header: 'ID',\r\n    Footer: 'ID',\r\n    accessor: 'id',\r\n  },\r\n  {\r\n    Header: 'Name',\r\n    Footer: 'Name',\r\n    columns: [\r\n      {\r\n        Header: 'First Name',\r\n        Footer: 'First Name',\r\n        accessor: 'first_name',\r\n      },\r\n      {\r\n        Header: 'Last Name',\r\n        Footer: 'Last Name',\r\n        accessor: 'last_name',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    Header: 'Info',\r\n    Footer: 'Info',\r\n    columns: [\r\n      {\r\n        Header: 'E-mail',\r\n        Footer: 'E-mail',\r\n        accessor: 'email',\r\n      },\r\n      {\r\n        Header: 'Date of Birth',\r\n        Footer: 'Date of Birth',\r\n        accessor: 'date_of_birth',\r\n      },\r\n      {\r\n        Header: 'Age',\r\n        Footer: 'Age',\r\n        accessor: 'age',\r\n      },\r\n      {\r\n        Header: 'Country',\r\n        Footer: 'Country',\r\n        accessor: 'country',\r\n      },\r\n      {\r\n        Header: 'Phone',\r\n        Footer: 'Phone',\r\n        accessor: 'phone',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import styled from 'styled-components';\r\n\r\nexport const Styles = styled.div`\r\n  max-width: 100%;\r\n\r\n  .table {\r\n    width: 100%;\r\n    border: 1px solid #ddd;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    border-collapse: collapse;\r\n\r\n    .tr {\r\n      :last-child {\r\n        .td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n\r\n      &:nth-child(even) {\r\n        .td {\r\n          background-color: #f2f2f2;\r\n        }\r\n      }\r\n    }\r\n\r\n    .th,\r\n    .td {\r\n      padding: 8px;\r\n      border-bottom: 1px solid #ddd;\r\n      border-right: 1px solid #ddd;\r\n      background-color: #fff;\r\n      overflow: hidden;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n\r\n    &.sticky {\r\n      overflow: scroll;\r\n      .header,\r\n      .footer {\r\n        position: sticky;\r\n        z-index: 1;\r\n        width: fit-content;\r\n      }\r\n\r\n      .header {\r\n        top: 0;\r\n        box-shadow: 0px 3px 3px #ccc;\r\n      }\r\n\r\n      .footer {\r\n        bottom: 0;\r\n        box-shadow: 0px -3px 3px #ccc;\r\n      }\r\n\r\n      .body {\r\n        position: relative;\r\n        z-index: 0;\r\n      }\r\n\r\n      [data-sticky-td] {\r\n        position: sticky;\r\n      }\r\n\r\n      [data-sticky-last-left-td] {\r\n        box-shadow: 2px 0px 3px #ccc;\r\n      }\r\n\r\n      [data-sticky-first-right-td] {\r\n        box-shadow: -2px 0px 3px #ccc;\r\n      }\r\n    }\r\n\r\n    .th,\r\n    .footer .tr:last-child .td {\r\n      padding-top: 12px;\r\n      padding-bottom: 12px;\r\n      text-align: center;\r\n      background-color: #4caf50;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n","import './table.css';\r\nimport React, { useMemo } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport { COLUMNS } from './columns';\r\nimport { useBlockLayout, useTable } from 'react-table';\r\nimport { useSticky } from 'react-table-sticky';\r\nimport { Styles } from './TableStyles';\r\nimport styled from 'styled-components';\r\n\r\nexport default function StickyTable() {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      // @ts-ignore\r\n      columns,\r\n      data,\r\n    },\r\n    useBlockLayout,\r\n    useSticky,\r\n  );\r\n\r\n  const firstPageRows = rows.slice(0, 20);\r\n\r\n  const StickyTableWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n  `;\r\n\r\n  return (\r\n    <StickyTableWrapper>\r\n      <Styles>\r\n        <div\r\n          {...getTableProps()}\r\n          className=\"table sticky\"\r\n          style={{ height: '400px' }}\r\n        >\r\n          <div className=\"header\">\r\n            {headerGroups.map((headerGroup) => (\r\n              <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                {headerGroup.headers.map((column) => (\r\n                  <div {...column.getHeaderProps()} className=\"th\">\r\n                    {column.render('Header')}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div {...getTableBodyProps()} className=\"body\">\r\n            {firstPageRows.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <div {...row.getRowProps()} className=\"tr\">\r\n                  {row.cells.map((cell) => (\r\n                    <div {...cell.getCellProps()} className=\"td\">\r\n                      {cell.render('Cell')}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"footer\">\r\n            {footerGroups.map((footerGroup) => (\r\n              <div {...footerGroup.getHeaderGroupProps()} className=\"tr\">\r\n                {footerGroup.headers.map((column) => (\r\n                  <div {...column.getHeaderProps()} className=\"td\">\r\n                    {column.render('Footer')}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Styles>\r\n    </StickyTableWrapper>\r\n  );\r\n}\r\n","import React, { forwardRef, useEffect, useRef } from 'react';\r\n\r\ntype PropsType = {\r\n  indeterminate?: boolean;\r\n};\r\n\r\nexport const Checkbox = forwardRef<HTMLInputElement, PropsType>(\r\n  ({ indeterminate = false, ...rest }, ref) => {\r\n    const defaultRef = useRef<HTMLInputElement>();\r\n    const resolveRef = (ref || defaultRef) as any;\r\n\r\n    useEffect(() => {\r\n      if (!resolveRef.current) return;\r\n      resolveRef.current.indeterminate = indeterminate;\r\n    }, [indeterminate, resolveRef]);\r\n\r\n    return <input type=\"checkbox\" ref={resolveRef} {...rest} />;\r\n  },\r\n);\r\n","import './table.css';\r\nimport React, { useMemo } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport { COLUMNS } from './columns';\r\nimport { useTable } from 'react-table';\r\nimport { Checkbox } from './Checkbox';\r\nimport styled from 'styled-components';\r\n\r\nconst HidingOption = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  margin: 5px;\r\n`;\r\n\r\nexport default function ColumnHiding() {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n    allColumns,\r\n    getToggleHideAllColumnsProps,\r\n  } = useTable({\r\n    // @ts-ignore\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <HidingOption>\r\n        <div>\r\n          <Checkbox {...getToggleHideAllColumnsProps()} /> Toggle All\r\n        </div>\r\n        {allColumns.map((column) => (\r\n          <div key={column.id}>\r\n            <label>\r\n              <input type=\"checkbox\" {...column.getToggleHiddenProps()} />\r\n              {' ' + column.Header}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </HidingOption>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((columns) => (\r\n                <th {...columns.getHeaderProps()}>\r\n                  {columns.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => (\r\n            <tr {...footerGroup.getFooterGroupProps()}>\r\n              {footerGroup.headers.map((column) => (\r\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import './table.css';\r\nimport React, { useMemo } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport { COLUMNS } from './columns';\r\nimport { useColumnOrder, useTable } from 'react-table';\r\n\r\nexport default function ColumnOrder() {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n    setColumnOrder,\r\n  } = useTable(\r\n    {\r\n      // @ts-ignore\r\n      columns,\r\n      data,\r\n    },\r\n    useColumnOrder,\r\n  );\r\n\r\n  const changeOrder = () => {\r\n    setColumnOrder([\r\n      'id',\r\n      'first_name',\r\n      'last_name',\r\n      'phone',\r\n      'country',\r\n      'date_of_birth',\r\n    ]);\r\n  };\r\n  return (\r\n    <div>\r\n      <button onClick={changeOrder}>Change column order</button>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((columns) => (\r\n                <th {...columns.getHeaderProps()}>\r\n                  {columns.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup, idx) => (\r\n            <tr {...footerGroup.getFooterGroupProps()}>\r\n              {footerGroup.headers.map((column) => (\r\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useAsyncDebounce } from 'react-table';\r\n\r\ntype Props = {\r\n  filter: string;\r\n  setFilter: (value: string) => void;\r\n};\r\n\r\nexport default function GlobalFilter({ filter, setFilter }: Props) {\r\n  const [value, setValue] = useState(filter);\r\n\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setFilter(value || undefined);\r\n  }, 1000);\r\n\r\n  return (\r\n    <div style={{ margin: '5px' }}>\r\n      <span>\r\n        Search:{' '}\r\n        <input\r\n          type=\"text\"\r\n          value={value || ''}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder=\"global search\"\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\ntype Props = {\r\n  column: {\r\n    filterValue: string;\r\n    setFilter: (value: string) => void;\r\n  };\r\n};\r\n\r\nexport default function ColumnFilter({ column }: Props) {\r\n  const { filterValue, setFilter } = column;\r\n  return (\r\n    <div>\r\n      <span>\r\n        Search:{' '}\r\n        <input\r\n          type=\"text\"\r\n          value={filterValue || ''}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import './table.css';\r\nimport React, { useMemo } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport { COLUMNS } from './columns';\r\nimport { useTable, useGlobalFilter, useFilters } from 'react-table';\r\nimport GlobalFilter from './GlobalFilter';\r\nimport ColumnFilter from './ColumnFilter';\r\n\r\nexport default function FilteringTable() {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const defaultColumn = useMemo(() => {\r\n    return {\r\n      Filter: ColumnFilter,\r\n    };\r\n  }, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      // @ts-ignore\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n  );\r\n\r\n  const { globalFilter } = state;\r\n\r\n  return (\r\n    <div>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <div>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()}>\r\n                    {column.render('Header')}\r\n                    <div>\r\n                      {column.canFilter ? column.render('Filter') : null}\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n\r\n          <tfoot>\r\n            {footerGroups.map((footerGroup) => (\r\n              <tr {...footerGroup.getFooterGroupProps()}>\r\n                {footerGroup.headers.map((column) => (\r\n                  <td {...column.getFooterProps()}>\r\n                    {column.render('Footer')}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './table.css';\r\nimport React, { useMemo } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport { COLUMNS } from './columns';\r\nimport { usePagination, useTable } from 'react-table';\r\nimport styled from 'styled-components';\r\n\r\nconst PaginationOptions = styled.div`\r\n  margin: 5px;\r\n\r\n  display: flex;\r\n  gap: 20px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default function PaginationTable() {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    state,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      // @ts-ignore\r\n      columns,\r\n      data,\r\n      initialState: {\r\n        pageIndex: 2,\r\n      },\r\n    },\r\n    usePagination,\r\n  );\r\n\r\n  const { pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <div>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((columns) => (\r\n                <th {...columns.getHeaderProps()}>\r\n                  {columns.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => (\r\n            <tr {...footerGroup.getFooterGroupProps()}>\r\n              {footerGroup.headers.map((column) => (\r\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </table>\r\n      <PaginationOptions>\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const pageNumber = e.target.value\r\n                ? Number(e.target.value) - 1\r\n                : 0;\r\n              gotoPage(pageNumber);\r\n            }}\r\n            style={{ width: '50px' }}\r\n          />\r\n        </span>\r\n        <span>\r\n          Page Size:{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => setPageSize(Number(e.target.value))}\r\n          >\r\n            {[10, 25, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </span>\r\n\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          Previous\r\n        </button>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          Next\r\n        </button>\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>\r\n      </PaginationOptions>\r\n    </div>\r\n  );\r\n}\r\n","import './table.css';\r\nimport React, { useMemo } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport { COLUMNS } from './columns';\r\nimport { CellProps, usePagination, useRowSelect, useTable } from 'react-table';\r\nimport { Checkbox } from './Checkbox';\r\n\r\nexport default function RowSelection() {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n    selectedFlatRows,\r\n  } = useTable(\r\n    {\r\n      // @ts-ignore\r\n      columns,\r\n      data,\r\n    },\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: 'selection',\r\n            Header: ({ getToggleAllPageRowsSelectedProps }) => (\r\n              <Checkbox {...getToggleAllPageRowsSelectedProps()} />\r\n            ),\r\n            Cell: ({ row }: CellProps<any>) => (\r\n              <Checkbox {...row.getToggleRowSelectedProps()} />\r\n            ),\r\n          },\r\n          ...columns,\r\n        ];\r\n      });\r\n    },\r\n  );\r\n\r\n  const firstPageRows = rows.slice(0, 10);\r\n\r\n  return (\r\n    <div>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((columns) => (\r\n                <th {...columns.getHeaderProps()}>\r\n                  {columns.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {firstPageRows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => (\r\n            <tr {...footerGroup.getFooterGroupProps()}>\r\n              {footerGroup.headers.map((column) => (\r\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </table>\r\n\r\n      <pre>\r\n        <code>\r\n          {JSON.stringify(\r\n            {\r\n              selectedFlatRows: selectedFlatRows.map((row) => row.original),\r\n            },\r\n            null,\r\n            2,\r\n          )}\r\n        </code>\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n","import './table.css';\r\nimport React, { useMemo } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport { GROUPED_COLUMNS } from './columns';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function BasicTable() {\r\n  const columns = useMemo(() => GROUPED_COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const tableInstance = useTable({\r\n    // @ts-ignore\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = tableInstance;\r\n\r\n  return (\r\n    <div>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((columns) => (\r\n                <th {...columns.getHeaderProps()}>\r\n                  {columns.render('Header')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => (\r\n            <tr {...footerGroup.getFooterGroupProps()}>\r\n              {footerGroup.headers.map((column) => (\r\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import './table.css';\r\nimport React, { useMemo } from 'react';\r\nimport MOCK_DATA from './MOCK_DATA.json';\r\nimport { COLUMNS } from './columns';\r\nimport { useTable, useSortBy } from 'react-table';\r\n\r\nexport default function SortingTable() {\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable(\r\n    {\r\n      // @ts-ignore\r\n      columns,\r\n      data,\r\n    },\r\n    useSortBy,\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <p style={{ margin: '5px' }}> 📝 click column</p>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                  {column.render('Header')}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? ' 🔽'\r\n                        : ' 🔼'\r\n                      : ''}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => (\r\n            <tr {...footerGroup.getFooterGroupProps()}>\r\n              {footerGroup.headers.map((column) => (\r\n                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, matchPath, useLocation } from 'react-router-dom';\r\n\r\nconst NavItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  margin-bottom: 2px;\r\n  color: black;\r\n\r\n  a {\r\n    padding: 15px 20px;\r\n    display: flex;\r\n    height: 100%;\r\n    align-items: center;\r\n    gap: 10px;\r\n    color: inherit;\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f5f5f6;\r\n  }\r\n\r\n  &.active {\r\n    background-color: #cccccc;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  href: string;\r\n  icon?: string;\r\n  title: string;\r\n};\r\n\r\nconst NavItem = ({ href, icon = '', title }: Props) => {\r\n  const location = useLocation();\r\n\r\n  const active = (href as string)\r\n    ? !!matchPath(href, location.pathname)\r\n    : false;\r\n\r\n  return (\r\n    <NavItemWrapper className={active ? 'active' : ''}>\r\n      <Link to={href}>\r\n        {icon}\r\n        <span>{title}</span>\r\n      </Link>\r\n    </NavItemWrapper>\r\n  );\r\n};\r\n\r\nexport default NavItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport NavItem from './NavItem';\r\n\r\nconst items = [\r\n  {\r\n    href: '/BasicTable',\r\n    title: '/BasicTable',\r\n  },\r\n  {\r\n    href: '/SortingTable',\r\n    title: '/SortingTable',\r\n  },\r\n  {\r\n    href: '/FilteringTable',\r\n    title: '/FilteringTable',\r\n  },\r\n  {\r\n    href: '/PaginationTable',\r\n    title: '/PaginationTable',\r\n  },\r\n  {\r\n    href: '/RowSelection',\r\n    title: '/RowSelection',\r\n  },\r\n  {\r\n    href: '/ColumnOrder',\r\n    title: '/ColumnOrder',\r\n  },\r\n  {\r\n    href: '/ColumnHiding',\r\n    title: '/ColumnHiding',\r\n  },\r\n  {\r\n    href: '/StickyTable',\r\n    title: '/StickyTable',\r\n  },\r\n];\r\n\r\nconst Sidebar = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: white;\r\n  border-right: 1px solid #333e4c;\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n\r\n  .logo {\r\n    padding: 20px;\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: center;\r\n    font-size: x-large;\r\n  }\r\n\r\n  hr {\r\n    border-color: #ffe7eb1f;\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst RepoLink = styled.a`\r\n  & {\r\n    padding: 15px 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    color: inherit;\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f5f5f6;\r\n  }\r\n`;\r\n\r\nconst DashboardSidebar = () => {\r\n  return (\r\n    <Sidebar>\r\n      <div className=\"logo\">\r\n        <span className=\"icon\">😀</span>\r\n        <strong>react-table-practice</strong>\r\n      </div>\r\n      <div className=\"menu\">\r\n        {items.map((item) => (\r\n          <NavItem href={item.href} key={item.title} title={item.title} />\r\n        ))}\r\n      </div>\r\n      <hr />\r\n      <RepoLink href=\"https://github.com/chinsun9/react-table-practice\">\r\n        <svg\r\n          viewBox=\"64 64 896 896\"\r\n          focusable=\"false\"\r\n          data-icon=\"github\"\r\n          width=\"1em\"\r\n          height=\"1em\"\r\n          fill=\"currentColor\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <path d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\" />\r\n        </svg>\r\n        Github\r\n      </RepoLink>\r\n    </Sidebar>\r\n  );\r\n};\r\n\r\nexport default DashboardSidebar;\r\n","import React from 'react';\r\nimport StickyTable from './components/StickyTable';\r\nimport ColumnHiding from './components/ColumnHiding';\r\nimport ColumnOrder from './components/ColumnOrder';\r\nimport FilteringTable from './components/FilteringTable';\r\nimport PaginationTable from './components/PaginationTable';\r\nimport RowSelection from './components/RowSelection';\r\nimport BasicTable from './components/BasicTable';\r\nimport SortingTable from './components/SortingTable';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar';\r\nimport styled from 'styled-components';\r\n\r\nconst LayoutRoot = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 250px 1fr;\r\n  min-height: 100vh;\r\n\r\n  & > div:nth-child(2) {\r\n    width: calc(100vw - 270px);\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <LayoutRoot>\r\n      <Sidebar />\r\n      <Switch>\r\n        <Route path=\"/StickyTable\" component={StickyTable} />\r\n        <Route path=\"/ColumnHiding\" component={ColumnHiding} />\r\n        <Route path=\"/ColumnOrder\" component={ColumnOrder} />\r\n        <Route path=\"/FilteringTable\" component={FilteringTable} />\r\n        <Route path=\"/PaginationTable\" component={PaginationTable} />\r\n        <Route path=\"/RowSelection\" component={RowSelection} />\r\n        <Route path=\"/BasicTable\" component={BasicTable} />\r\n        <Route path=\"/SortingTable\" component={SortingTable} />\r\n        <Route path=\"*\" component={BasicTable} />\r\n      </Switch>\r\n    </LayoutRoot>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}